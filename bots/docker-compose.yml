version: '3.7'

x-common-variables: &common-variables
  NODE_ENV: production
  DB_CLIENT: pg
  DB_HOST: db
  DB_ADMIN: root
  DB_ADMIN_PASSWORD: esp10n4g31sb4d

services:
  tux:
    image: alextaxiera/bots:tuxedoman-master-9
    deploy:
      replicas: 1
    depends_on:
      - db
    networks:
      - postgres_backend_network
    environment:
      <<: *common-variables
      DISCORD_TOKEN: 'NDQxMzY2NjI4ODM2NDQyMTIy.XhpRFQ.oUqfa4bKNXR3RQRMGDOubMVb8fc'
      DB_NAME: 'tuxedoman'
      DB_USER: 'tux'
      DB_PASS: 'tuxedomask'

  tag:
    image: alextaxiera/bots:tag-dev-2
    deploy:
      replicas: 1
    depends_on:
      - db
    networks:
      - postgres_backend_network
    environment:
      <<: *common-variables
      DISCORD_TOKEN: 'NTIwNzgzNDQxODY4ODgxOTIw.Duy5jw._mvXvfSxyglMSmjJssRUQXwRK6g'
      IMGUR_CLIENT_ID: '41b60de5c6bfd49'
      DB_NAME: 'tagger'
      DB_USER: 'tag'
      DB_PASS: 'tagbot'

  eli:
    image: alextaxiera/bots:eli-master-3
    deploy:
      replicas: 1
    environment:
      <<: *common-variables
      DISCORD_TOKEN: 'NDM2MjI2NDE1ODM5Njc0MzY4.Xi5vYA.M-OfRQmeuV0k-My76BA7lgdJ6bw'

  db:
    image: alextaxiera/bots:pg-1
    deploy:
      replicas: 1
      resources:
        reservations:
          memory: 128M
        limits:
          memory: 256M
    ports:
      - 5432:5432
    networks:
      - postgres_backend_network
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'esp10n4g31sb4d'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: bind
        source: ~/docker/volumes/postgres
        target: /var/lib/postgresql/data
  
  testdb:
    image: pg-testing:latest
    deploy:
      replicas: 1
      resources:
        reservations:
          memory: 128M
        limits:
          memory: 256M
    ports:
      - 5434:5432
    networks:
      - postgres_backend_network
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'esp10n4g31sb4d'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: bind
        source: ~/docker/volumes/postgres-test
        target: /var/lib/postgresql/data

networks:
  postgres_backend_network:
